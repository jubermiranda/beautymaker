package com.doo.finalActv.beautymaker.ui.client.cards;

import com.doo.finalActv.beautymaker.model.ServiceData;
import com.doo.finalActv.beautymaker.model.StaffData;
import java.awt.Color;
import java.awt.Component;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import javax.swing.JLabel;

public class ServiceCard extends javax.swing.JPanel {
  private ServiceData serviceData;

  public ServiceCard(ServiceData serviceData) {
    initComponents();
    this.serviceData = serviceData;
    this.initialize();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    nameField = new javax.swing.JLabel();
    descriptionField = new javax.swing.JLabel();
    durationField = new javax.swing.JLabel();
    priceField = new javax.swing.JLabel();

    setBackground(new java.awt.Color(255, 255, 255));
    setMaximumSize(new java.awt.Dimension(580, 200));
    setMinimumSize(new java.awt.Dimension(580, 200));

    nameField.setForeground(new java.awt.Color(0, 0, 0));

    descriptionField.setForeground(new java.awt.Color(0, 0, 0));

    durationField.setForeground(new java.awt.Color(0, 0, 0));

    priceField.setForeground(new java.awt.Color(0, 0, 0));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(descriptionField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(durationField, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(descriptionField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(durationField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(priceField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel descriptionField;
  private javax.swing.JLabel durationField;
  private javax.swing.JLabel nameField;
  private javax.swing.JLabel priceField;
  // End of variables declaration//GEN-END:variables

  private void initialize() {
    nameField.setText(this.serviceData.name);
    descriptionField.setText(
        this.formatDescription(this.serviceData.description)
    );
    durationField.setText(this.getFormattedDuration());
    priceField.setText(this.getFormattedPrice());

    this.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK, 3));
    this.setAlignmentX(Component.CENTER_ALIGNMENT);
  }

  private String getFormattedDuration() {
    String result = "Duration: ";
    int seconds = this.serviceData.duration;
    int hours = seconds / 3600;
    int minutes = (seconds % 3600) / 60;
    int remainingSeconds = seconds % 60;
    if (hours > 0) {
      result += hours + "h ";
    }
    if (minutes > 0) {
      result += minutes + "m ";
    }
    if (remainingSeconds > 0) {
      result += remainingSeconds + "s";
    }
    return result.trim();
  }

  private String getFormattedPrice() {
    return "Price: $" + String.format("%.2f", this.serviceData.price / 100.0);
  }

  private String formatDescription(String description) {
    if (description == null || description.isEmpty()) {
      return "No description available.";
    }

    String result = "<html>";
    result += this.serviceData.description.replace("\n", "<br>");
    result += "</html>";
    return result;
  }

}
